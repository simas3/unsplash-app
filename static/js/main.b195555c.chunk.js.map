{"version":3,"sources":["reducers/imagesReducer.js","reducers/index.js","actions/types.js","store.js","actions/imageActions.js","components/SearchForm.js","components/Image.js","components/ImageList.js","components/Header.js","components/Query.js","components/QueryList.js","App.js","serviceWorker.js","index.js"],"names":["initialState","total","undefined","images","queryHistory","loading","combineReducers","state","arguments","length","action","type","Object","objectSpread","payload","results","toConsumableArray","concat","filter","_","i","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","getImages","query","dispatch","setImagesLoading","axios","get","process","headers","Origin","then","res","data","catch","err","SearchForm","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","error","onChange","bind","assertThisInitialized","onSearch","onSave","inherits","createClass","key","value","e","setState","defineProperty","target","name","preventDefault","saveQuery","react_default","a","createElement","className","onSubmit","placeholder","onClick","Component","connect","Image","href","link","src","url","alt","ImageList","imagesContent","_this$props$images","react_spinners","sizeUnit","size","color","console","log","map","image","components_Image","urls","thumb","links","html","id","Header","title","subtitle","defaultProps","Query","deleteQuery","count","onQueryClick","onRemove","QueryList","deleteQueries","index","components_Query","App","es","components_Header","components_SearchForm","components_ImageList","components_QueryList","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b195555c.chunk.js","sourcesContent":["import { GET_IMAGES, IMAGES_LOADING, SAVE_QUERY, DELETE_QUERY, DELETE_QUERIES } from '../actions/types'\r\n\r\nconst initialState = {\r\n    total: undefined,\r\n    images: [],\r\n    queryHistory: [],\r\n    loading: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case IMAGES_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        case GET_IMAGES:\r\n            return {\r\n                ...state,\r\n                total: action.payload.total,\r\n                images: action.payload.results,\r\n                loading: false\r\n            }\r\n        case SAVE_QUERY:\r\n            return {\r\n                ...state,\r\n                queryHistory: [...state.queryHistory, action.payload]\r\n            }\r\n        case DELETE_QUERY:\r\n            return {\r\n                ...state,\r\n                queryHistory: state.queryHistory.filter((_, i) => i !== action.payload)\r\n            }\r\n        case DELETE_QUERIES:\r\n            return {\r\n                ...state,\r\n                queryHistory: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport imagesReducer from './imagesReducer'\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    images: imagesReducer\r\n});\r\n","export const GET_IMAGES = 'GET_IMAGES';\r\nexport const IMAGES_LOADING = 'IMAGES_LOADING';\r\nexport const SAVE_QUERY = 'SAVE_QUERY';\r\nexport const DELETE_QUERY = 'DELETE_QUERY';\r\nexport const DELETE_QUERIES = 'DELETE_QUERIES';\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\n\r\nexport default store;","import axios from 'axios';\r\nimport { IMAGES_LOADING, GET_IMAGES, SAVE_QUERY, DELETE_QUERY, DELETE_QUERIES } from './types'\r\n\r\n\r\n//Get Images\r\nexport const getImages = query => dispatch => {\r\n    dispatch(setImagesLoading())\r\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.unsplash.com/search/photos/?page=1&per_page=30&query=${query}&client_id=${process.env.REACT_APP_ACCESS}`, {\r\n        headers: { 'Origin': `https://api.unsplash.com/search/photos/?page=1&per_page=30&query=${query}&client_id=${process.env.REACT_APP_ACCESS}` }\r\n    })\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_IMAGES,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_IMAGES,\r\n                payload: {}\r\n            })\r\n        })\r\n}\r\n\r\n//Add Post\r\nexport const saveQuery = query => dispatch => {\r\n\r\n    dispatch({\r\n        type: SAVE_QUERY,\r\n        payload: query\r\n    })\r\n}\r\n\r\nexport const deleteQuery = query => dispatch => {\r\n    console.log('delete')\r\n    dispatch({\r\n        type: DELETE_QUERY,\r\n        payload: query\r\n    })\r\n}\r\n\r\nexport const deleteQueries = () => dispatch => {\r\n    dispatch({\r\n        type: DELETE_QUERIES\r\n    })\r\n}\r\n\r\n\r\n//Images Loading\r\nexport const setImagesLoading = () => {\r\n    return {\r\n        type: IMAGES_LOADING\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getImages, saveQuery } from '../actions/imageActions'\r\n\r\nexport class SearchForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: '',\r\n            error: ''\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSearch = this.onSearch.bind(this)\r\n        this.onSave = this.onSave.bind(this)\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSearch(e) {\r\n        e.preventDefault()\r\n        if (!this.state.query) {\r\n            this.setState(() => ({ error: 'Please Enter Your Search Query' }))\r\n        } else {\r\n            this.props.getImages(this.state.query)\r\n            this.setState({ error: '', query: '' })\r\n        }\r\n\r\n    }\r\n\r\n    onSave(e) {\r\n        e.preventDefault()\r\n        if (!this.state.query) {\r\n            this.setState(() => ({ error: 'Can\\'t save empty query' }))\r\n        } else {\r\n            this.props.saveQuery(this.state.query)\r\n            this.setState({ error: '', query: '' })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"query\" onSubmit={this.onSearch}>\r\n                    <input\r\n                        className=\"query__input\"\r\n                        placeholder=\"Search images...\"\r\n                        name=\"query\"\r\n                        value={this.state.query}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    <button type=\"submit\" className=\"button\">Search</button>\r\n                    <button type=\"button\" className=\"button\" onClick={this.onSave}>Save</button>\r\n                </form>\r\n                {this.state.error && <p className=\"query-error\">{this.state.error}</p>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSearchForm.propTypes = {\r\n    getImages: PropTypes.func.isRequired,\r\n    saveQuery: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getImages, saveQuery })(SearchForm)\r\n","import React from 'react';\r\n\r\nconst Image = props =>\r\n    <div className=\"image-item\">\r\n        <a href={props.link}>\r\n            <img className=\"image\" src={props.url} alt=\"\" />\r\n        </a>\r\n    </div>;\r\n\r\nexport default Image;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { ClipLoader } from 'react-spinners';\r\nimport Image from './Image'\r\n\r\nexport class ImageList extends Component {\r\n\r\n    render() {\r\n\r\n        const { images, loading, total } = this.props.images\r\n\r\n        let imagesContent;\r\n\r\n        if (loading) {\r\n            imagesContent = (\r\n                <div className=\"spinner\">\r\n                    <ClipLoader\r\n                        sizeUnit={\"px\"}\r\n                        size={100}\r\n                        color={'#8357c5;'}\r\n                        loading={loading}\r\n                    />\r\n                </div>\r\n            )\r\n        } else if (typeof images != \"undefined\" && images != null && images.length != null && images.length > 0) {\r\n            console.log(images)\r\n            imagesContent = (\r\n                <div className=\"images-grid\">\r\n                    {images.map(image => (\r\n                        <Image\r\n                            url={image.urls.thumb}\r\n                            link={image.links.html}\r\n                            key={image.id}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )\r\n        } else if (total !== undefined && images.length === 0) {\r\n            imagesContent = (\r\n                <div className=\"query-error\">\r\n                    <p>There was no images found</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"flex-images\">\r\n                {imagesContent}\r\n            </div>\r\n        )\r\n    } q\r\n}\r\n\r\nImageList.propTypes = {\r\n    images: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    images: state.images\r\n})\r\n\r\nexport default connect(mapStateToProps)(ImageList)\r\n","import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <h1 className=\"header__title\">{props.title}</h1>\r\n                {props.subtitle && <h2 className=\"header__subtitle\">{props.subtitle}</h2>}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nHeader.defaultProps = {\r\n    title: 'Unsplash App'\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { deleteQuery, getImages } from '../actions/imageActions'\r\nimport { connect } from 'react-redux'\r\n\r\nexport class Query extends Component {\r\n\r\n\r\n    onQueryClick() {\r\n        this.props.getImages(this.props.query)\r\n    }\r\n\r\n    onRemove() {\r\n        this.props.deleteQuery(this.props.count - 1)\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div className=\"queryoption\">\r\n                <button className=\"querybutton querybutton--link\" onClick={this.onQueryClick.bind(this)} >{this.props.count}. {this.props.query}</button>\r\n                <button className=\"querybutton querybutton--link\" onClick={this.onRemove.bind(this)}>x</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nQuery.propTypes = {\r\n    deleteQuery: PropTypes.func.isRequired,\r\n    getImages: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteQuery, getImages })(Query)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Query from './Query'\r\nimport { deleteQueries } from '../actions/imageActions'\r\n\r\nexport class QueryList extends Component {\r\n\r\n    deleteQueries() {\r\n        this.props.deleteQueries()\r\n    }\r\n\r\n    render() {\r\n        const { queryHistory } = this.props.images\r\n\r\n        return (\r\n            <div className=\"flex-queries\">\r\n                {queryHistory.length > 0 ? (\r\n                    <div className=\"querylist\">\r\n                        <div className=\"querylist-header\">\r\n                            <h3 className=\"querylist-header__title\">Your Saved Queries</h3>\r\n                            <button className=\"querybutton querybutton--link\" onClick={this.deleteQueries.bind(this)}>X</button>\r\n                        </div>\r\n                        {\r\n                            queryHistory.map((query, index) => {\r\n                                return <Query key={index} query={query} count={index + 1} />\r\n                            })\r\n                        }\r\n                    </div>) : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nQueryList.propTypes = {\r\n    deleteQueries: PropTypes.func.isRequired,\r\n    images: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    images: state.images\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { deleteQueries })(QueryList)\r\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nimport SearchForm from './components/SearchForm';\nimport ImageList from './components/ImageList'\nimport Header from './components/Header'\nimport QueryList from './components/QueryList'\n\nimport 'normalize.css/normalize.css'\nimport './App.scss'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Header subtitle=\"Explore the largest open collection of high-quality photos.\" />\n          <SearchForm />\n          <div className=\"flex-container\">\n            <ImageList />\n            <QueryList />\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}